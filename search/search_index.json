{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"avionics/","title":"4\" Avionics","text":"Sensors Power Status Backplate GPS Recovery Antenna <p>CAD</p>"},{"location":"avionics/#overview-of-system","title":"Overview of System","text":"<p>The avionics system is composed of five  modules interconnected through CAN bus. These modules are: Power, Sensors, GPS, Antenna, and Recovery. The backplate features PCIe slots, and connects all the modules.</p>"},{"location":"avionics/#requirements-and-design-goals","title":"Requirements and Design Goals","text":"<p>The primary goal of the 4-inch avionics system is to enable learning. This will be the first system of many. </p>"},{"location":"avionics/#primary-functional-requirements","title":"Primary Functional Requirements","text":"<ul> <li>Don't be janky.</li> <li>Fully open-source.</li> <li>Assemblable by JLCPCB.</li> <li>Incorporate all known best practices to enable scalability.</li> <li>It will be a CAN-enabled system in a 4-inch diameter form factor.</li> </ul>"},{"location":"avionics/#battery","title":"Battery","text":"<p>The system will use a SRAD battery pack for custom-built boards, and COTS components will use a commercial battery pack. For the first launch, a 2s 2p pack inspired by this video will be used.</p>"},{"location":"avionics/#improvements-for-the-next-version","title":"Improvements for the Next Version","text":"<ul> <li>USB Multiplexer: Controlled by a Raspberry Pi Zero. The backplate will host the MUX, enabling digital reboots and removal of USB ports except on the Pi Zero.</li> <li>Programmable Power MUX: Allows remote rebooting of components.</li> <li>Ethernet: Inclusion for data transmission.</li> <li>Camera Transmission</li> <li>USB Protection IC</li> <li>Auto fuel fill</li> </ul>"},{"location":"avionics/GSE/","title":"GSE","text":"<p>Sonic Avionics will be developing ground support equipment. Next year, we'll develop avionics that can actuate valves, but this year it will all be done by the ground station.</p>"},{"location":"avionics/GSE/#requirements","title":"Requirements","text":""},{"location":"avionics/GSE/#pad","title":"Pad","text":""},{"location":"avionics/GSE/#telemetry","title":"Telemetry","text":"<ul> <li>Pressure Transducers: 4x PTD25-10-1000H</li> <li>Thermocouples 4x TBD</li> <li>Load Cell 2x TBD, 0-10V</li> </ul>"},{"location":"avionics/GSE/#control","title":"Control","text":"<ul> <li>10x 24v valves</li> <li>4x PWM Output</li> <li>LED status</li> </ul>"},{"location":"avionics/GSE/#pelican-case","title":"Pelican Case","text":""},{"location":"avionics/GSE/#plc","title":"PLC","text":"<ul> <li>CPU: Click PlUS C2-01CPU</li> <li> <p>CPU Option Slot Module: </p> </li> <li> <p>Thermocouple module</p> </li> </ul>"},{"location":"avionics/GSE/#mission-control","title":"Mission Control","text":""},{"location":"avionics/GSE/#pelican-case_1","title":"Pelican Case","text":"<ul> <li>CPU: Click PlUS C2-01CPU</li> <li> <p>CPU Option Slot Module: </p> </li> <li> <p>14x switches</p> </li> <li> <p>Camera view</p> </li> <li>OBS live streaming</li> </ul>"},{"location":"avionics/GSE/#gse_1","title":"GSE","text":"<ul> <li>Pressure Transducers: Up to 4x LPPT25-20-1000H (1% accuracy, current output) with expandability to 8 transducers</li> </ul>"},{"location":"avionics/GSE/#mojave-sphinx","title":"Mojave Sphinx","text":""},{"location":"avionics/GSE/#inputsoutputs","title":"Inputs/Outputs","text":"<pre><code>- Ox\n- Fuel\n- Chamber\n- Extra in case we want to put one somewhere else\n</code></pre> <ul> <li>Servos: Up to 5x servo outputs<ul> <li>Ox</li> <li>Fuel</li> <li>Purge</li> <li>Ox globe valve</li> <li>Regulator (potential)</li> </ul> </li> <li>Regulators: Electronic control for \\(CO_2\\)</li> <li>Load Cells: 2x<ul> <li>Tank weight</li> <li>Thrust</li> </ul> </li> </ul>"},{"location":"avionics/GSE/#communication","title":"Communication","text":"<ul> <li>CAN connection to upper avionics</li> <li>RFD900 port for testing purposes</li> <li>No wired ground testing connection needed</li> </ul>"},{"location":"avionics/cad/","title":"CAD","text":"<p>This is the page to describe the avionics bay CAD.</p> <p></p> <p>Version 0.2.0</p> <p>There's just barely enough space to fit the RFD900 on a module. so why not? The challenge is to see if these over hangs can print.</p> <p>Here is a blog post showing some other revisions.</p>"},{"location":"avionics/cad/#rack","title":"Rack","text":"<p>The rack will use these threaded inserts</p>"},{"location":"avionics/cad/#3d-printing","title":"3D printing","text":"<p>The rack had to be printed at a 45 degree angle.</p> <p></p> <p>Slicer Render</p>"},{"location":"avionics/PCB-Modules/antenna/","title":"Antenna","text":"<p>The antenna module is responsible for transmitting data to the ground. It utilizes the RFD 900.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/antenna/#components","title":"Components","text":"<ul> <li>Antenna</li> <li>RFD900</li> </ul>"},{"location":"avionics/PCB-Modules/backplate/","title":"Backplate","text":"<p>The backplate is extremely simple. It has 140 through hole pins and two SMD which which we solder manually. Two of the pins on the PCIe socket are removed to make way for the CAN bus. This is the only board that is not assembled by JLCPCB.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/backplate/#components","title":"Components","text":"<ul> <li>PCIe Socket</li> <li>0805 120\u03a9 Resistor</li> </ul>"},{"location":"avionics/PCB-Modules/gps/","title":"GPS","text":"<p>The GPS module features a u-blox NEO-M9N GNSS receiver with multi-constellation support and 25 Hz update rates. It includes an RP2040 microcontroller, CAN FD interface, external SMA antenna connection, and backup battery for fast satellite acquisition after power cycling.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/gps/#signal-filtering-and-impedance-considerations","title":"Signal Filtering and Impedance Considerations","text":"<p>The purpose of the ferrite bead in the circuit is to act as a low-pass filter, effectively suppressing high-frequency noise that could interfere with the GPS signal. In this case, it is used instead of a traditional inductor to provide a compact and efficient filtering solution. Additionally, the circuit is designed to create an impedance mismatch, which can help control signal reflection or improve signal integrity in certain scenarios, depending on the design requirements.</p>"},{"location":"avionics/PCB-Modules/gps/#component-selection","title":"Component Selection","text":"<p>In the M10S design, a ferrite bead was chosen over an inductor as a cost-effective solution, with the option to replace it in future iterations if needed. Additionally, a TVS diode was incorporated to ensure ESD protection, while a capacitor and resistor were added to meet the guidelines specified in section 4.3.4 of the integration manual.</p> <p>MAX-M10S Integration manual</p>"},{"location":"avionics/PCB-Modules/gps/#switch-from-max-m10s-to-neo-m9n","title":"Switch from MAX M10S to NEO-M9N","text":"<p>The MAX M10S GPS module was replaced with the NEO-M9N to enhance navigation performance. The NEO-M9N supports multiple GNSS constellations (GPS, Galileo, GLONASS, BeiDou) simultaneously, providing faster position acquisition, improved accuracy, and greater reliability. With update rates of up to 25 Hz, it delivers real-time position data critical for precise control and dynamic adjustments during use. Additionally, its suitable for high-altitude and high-velocity environments.</p> <p>NEO-M9N Integration manual</p>"},{"location":"avionics/PCB-Modules/gps/#choice-of-usb-hub-over-multiplexer","title":"Choice of USB Hub Over Multiplexer","text":"<p>The decision to use a USB hub instead of a multiplexer (MUX) was driven by the need to support simultaneous access to the GPS and MCU. A USB hub allows concurrent bandwidth sharing across devices, whereas a MUX only connects one device at a time, requiring active switching.</p>"},{"location":"avionics/PCB-Modules/gps/#switching-from-usb-hub-to-dedicated-usb-port","title":"Switching from USB Hub to Dedicated USB Port","text":"<p>Due to space constraints on the pcb, the USB hub was replaced with a dedicated secondary USB port. While this sacrifices concurrent device support, it simplifies routing, reduces component count.</p>"},{"location":"avionics/PCB-Modules/gps/#sma-connector-positioning-for-90-degree-antenna-bend","title":"SMA Connector Positioning for 90-Degree Antenna Bend","text":"<p>To accommodate the antenna\u2019s 90-degree bend in the rack enclosure:</p> <p>A right-angle SMA connector was in the middle of the board</p> <p>The RF trace to the SMA connector follows a 50-\u03a9 signle-coplanar design with a continuous ground plane beneath it and beside it to maintain signal integrity at 1.575 GHz (GPS L1 band).</p>"},{"location":"avionics/PCB-Modules/gps/#component-placement","title":"Component Placement","text":"<p>RP2040 Microcontroller: Positioned near the USB ports to shorten high-speed traces.</p> <p>CAN Transceiver: Isolated to prevent noise coupling.</p>"},{"location":"avionics/PCB-Modules/gps/#rechargeable-3v-lithium-cell-selection","title":"Rechargeable 3V Lithium Cell Selection","text":"<p>A 6.8mm rechargeable lithium cell (MS621FE) was chosen over CR2032/CR1220 due to:</p> <p>Size constraints: The 6.8mm fits better on the pcb. Rechargeability: Supports 500+ cycles, reducing long-term maintenance.</p> <p>Trade-offs: Lower capacity (25 mAh vs. CR2032\u2019s 225 mAh).</p> <p>Micro Battery Documentation</p>"},{"location":"avionics/PCB-Modules/gps/#migration-to-4-layer-pcb","title":"Migration to 4-Layer PCB","text":"<p>Upgrading from a 2-layer to a 4-layer board was driven by the NEO-M9N\u2019s high-performance requirements:</p> <p>Layer stackup: Signal/Ground \u2013 Ground \u2013 Power \u2013 Signal. This provides:</p> <p>A dedicated ground plane for RF sections (GPS, SMA connector).</p> <p>Improved EMI shielding and signal integrity for USB 3.0 and CAN FD traces.</p> <p>Reduced parasitic capacitance in high-speed lines.</p> <p>Thermal management: Inner power planes distribute heat from the CAN transceiver and RP2040.</p>"},{"location":"avionics/PCB-Modules/gps/#antenna-selection","title":"Antenna Selection","text":"<p>The ANT-20087EB56 GPS antenna was purchased from DigiKey to confirm dimensions due to limited documentation. A right-angle SMA connector was used on the pcb to allow a 90-degree bend. Its whip format makes it ideal for the rack-mounted design. Physical measurements will be taken to confirm dimensions.</p> <p>ANT-20087EB56 Digikey</p>"},{"location":"avionics/PCB-Modules/gps/#gps-module-development-updates","title":"GPS Module Development Updates","text":"<p>Since the last update, several changes and improvements have been implemented in the GPS module design and development process:</p>"},{"location":"avionics/PCB-Modules/gps/#component-replacements","title":"Component Replacements","text":"<p>Due to supply chain constraints, some components were changed to similar alternatives, including some resistors and the battery holder. The primary GPS module (NEO-M9N) was also preordered due to lack of stock.</p>"},{"location":"avionics/PCB-Modules/gps/#advanced-antenna-integration","title":"Advanced Antenna Integration","text":"<p>Research was conducted to allow more complex antenna features. This resulted in a detailed pdf, available as an attachment in the project repository:</p> <p>LNA Control (PDF)</p>"},{"location":"avionics/PCB-Modules/gps/#bom-and-symbol-corrections","title":"BOM and Symbol Corrections","text":"<p>The Bill of Materials (BOM) had some corrections, particularly to fix inconsistencies coming from components initially sourced from EasyEDA since those components lacked readily available symbols and footprints. Adjustments were made to keep consistency in the BOM.</p>"},{"location":"avionics/PCB-Modules/gps/#manual-footprint-completion-and-via-stitching","title":"Manual Footprint Completion and Via Stitching","text":"<p>Footprinting was completed, alongside manual via stitching. In the future hopefully the plugin works.</p>"},{"location":"avionics/PCB-Modules/gps/#new-logo-and-silk-screen","title":"New Logo and Silk Screen","text":"<p>The new logo for Sonic was added into the silkscreen layer of the PCB, resulting in a visually appealing and professional appearance.</p>"},{"location":"avionics/PCB-Modules/gps/#ergonomic-and-accessibility-improvements","title":"Ergonomic and Accessibility Improvements","text":"<p>Minor adjustments included positioning the module name and boot select button at the front edge. This helps identify the module and provides convenient access for board reflashing.</p>"},{"location":"avionics/PCB-Modules/power/","title":"Power","text":"<p>Power module.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/powersim/","title":"PowerSim","text":"<p>The PowerSim module is a precursor to the Power module. It's meant to be very simple and just take power from the USB. The real power module will have an MCU, CAN chip, and will be able to relay the charge level of the 18650 batteries.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/powersim/#components","title":"Components","text":"<ul> <li>Regulator</li> <li>Inductor</li> <li>USB-C JLC USB-C port</li> <li>IC</li> </ul>"},{"location":"avionics/PCB-Modules/recovery/","title":"Recovery","text":"<p>The recovery module is responsible for checking continuity and controlling ejection charges for parachute deployment. It features a BMP388 barometric sensor that enables autonomous deployment decisions independent of the sensors module. This approach provides redundancy in critical scenarios, ensuring parachute deployment even if the sensors module fails.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p> <p>This board will be in charge of checking continuity, and arming the ejection charges. it will report on tall this over the CAN network. It will also have it's own barometer for independency. We will be able to turn on or off automatic ejection. If the rocket target altitude is lower than expected, </p> <p>There will be remove before flight tags in the form of banana connectors with a tag on it which will disarm the charges.</p>"},{"location":"avionics/PCB-Modules/recovery/#components","title":"Components","text":"<ul> <li>Banana plug</li> <li>Banana socket (order an extra 5/16-32 nut with this)</li> <li>CAD model available here</li> <li> <p>STEP file available here</p> </li> <li> <p>MCU</p> <ul> <li> <p>MCU RP 2040</p> </li> <li> <p>Flash W25Q128JVP</p> </li> </ul> </li> <li> <p>USB-C JLC USB-C port</p> </li> <li> <p>Momentary Button TS-1187A-B-A-B</p> </li> <li> <p>CAN Controller and transceiver MCP25625</p> <ul> <li>CAN chip crystal X322516MLB4SI</li> </ul> </li> <li> <p>Quick Connectors </p> <ul> <li>Wago 2060-452</li> </ul> </li> </ul> <p>The above will disable a relay by shorting the enable pin.</p>"},{"location":"avionics/PCB-Modules/sensors/","title":"Sensors","text":"<p>The sensors module is responsible for logging and transmitting telemetry data over the CAN. It utilizes the BNO055 for sensor fusion. A custom sensor fusion algorithm will compare its results with those from the BNO055.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/sensors/#components","title":"Components","text":"<ul> <li> <p>MCU</p> <ul> <li> <p>MCU RP 2040</p> </li> <li> <p>Flash W25Q128JVP</p> </li> </ul> </li> <li> <p>USB-C JLC USB-C port</p> </li> <li> <p>Momentary Button TS-1187A-B-A-B</p> </li> <li> <p>Sensors</p> <ul> <li> <p>IMU BNO055</p> <ul> <li>IMU Crystal ABS07-32.768KHZ-T</li> </ul> </li> <li> <p>Barometer BMP388</p> </li> </ul> </li> <li> <p>CAN Controller and transceiver MCP25625</p> <ul> <li>CAN chip crystal X322516MLB4SI</li> </ul> </li> </ul>"},{"location":"avionics/PCB-Modules/sensors/#assembly","title":"Assembly","text":"<p>Standard assembly was chosen over economic assembly primarily because the BNO055 and BMP388 are not available with economic assembly. Additionally, since the number of extended parts on the board makes up exactly half of all unique components, the loading fee remains the same regardless of the assembly type.</p>"},{"location":"avionics/PCB-Modules/status/","title":"Status","text":"<p>The status module displays the status of other avionics subsystems.</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/PCB-Modules/status/#action-items","title":"Action Items","text":""},{"location":"avionics/PCB-Modules/status/#schematic","title":"Schematic","text":"<ul> <li>USB resistors </li> <li>Add buttons<ul> <li>4 LCD</li> <li>1 reset</li> <li>1 boot </li> </ul> </li> <li>Source SD card mount</li> </ul>"},{"location":"avionics/PCB-Modules/status/#routing","title":"Routing","text":"<ul> <li>Routing USB and CAN <ul> <li>Learn differential pairs</li> <li>Learn about impedance matching</li> </ul> </li> <li>Digikey trace width calculator</li> </ul>"},{"location":"avionics/PCB-Modules/status/#testing","title":"Testing","text":"<ul> <li>Test out display module.</li> </ul>"},{"location":"avionics/PCB-Modules/status/#components","title":"Components","text":""},{"location":"avionics/PCB-Modules/status/#mcp25625-can-controller","title":"MCP25625 CAN Controller","text":"<ul> <li>The CAN controller reads messages from different modules and transmits the received data to the RP2040 MCU.</li> </ul>"},{"location":"avionics/PCB-Modules/status/#rp2040-mcu","title":"RP2040 MCU","text":"<ul> <li>Receives CAN messages and displays them on an LCD screen.</li> <li>Push buttons connected to the MCU will be used for resetting and booting the MCU.</li> <li>Push buttons connected to the MCU will allow navigation through the CAN messages displayed on the LCD screen, enabling switching between different devices forward and backward.</li> </ul>"},{"location":"avionics/PCB-Modules/status/#micro-sd-card-slot","title":"Micro SD Card Slot","text":"<ul> <li>Capable of storing CAN data onto an SD card.</li> </ul>"},{"location":"avionics/archive/old/cad/","title":"CAD","text":"<p>This is the page to describe the avionics bay CAD.</p> <p></p> <p>Version 1</p> <p></p> <p>Version 2</p> <p></p> <p>Version 2, Section View</p> <p>There's just barely enough space to fit the RFD900x on a module. So why not?</p> <p>Here is a blog post showing some other revisions.</p>"},{"location":"avionics/archive/old/cad/#rack","title":"Rack","text":"<p>The rack will use these threaded inserts</p>"},{"location":"avionics/archive/old/PCB-Modules/PowerSim/0.1.0/","title":"0.1.0","text":"<p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/archive/old/PCB-Modules/PowerSim/0.1.0/#testing-module","title":"Testing Module","text":"<p>This module will only include:</p> <ul> <li>USB-C</li> <li>5v buck boost</li> <li>3.3v reg</li> </ul>"},{"location":"avionics/archive/old/PCB-Modules/PowerSim/0.1.0/#production-module","title":"Production Module","text":"<p>The production module will have</p> <ul> <li>USB-C (which will have mag safe thing that connects to it)</li> <li>5v reg</li> <li>3.3v reg</li> <li>RP2040</li> <li>Battery voltage monitor</li> <li>charging and switching circuit</li> <li>XT-30</li> </ul>"},{"location":"avionics/archive/old/PCB-Modules/PowerSim/0.1.0/#ics","title":"ICs","text":"<ul> <li> <p>Charging IC</p> <ul> <li>TI 1s to 3s charger and power path selector</li> </ul> </li> <li> <p>Power indicator</p> </li> <li> <p>Buck-Boost Converter  or this Buck-boost: TPS63070  or this </p> </li> <li> <p>Usb protection circuit TPD4S480 It should be able to be programmed and charged over the same USB port. If you plug into your laptop or something it shouldn't try to </p> </li> </ul>"},{"location":"avionics/archive/old/PCB-Modules/power/0.0.2/","title":"0.0.2","text":"<p>This prototype power module was developed as part of a learning initiative. Manufactured and assembled by JLCPCB, the boards were delivered in 15 days using the \u201cGlobal Standard Direct Line\u201d shipping method. The cost was $116.28 CAD for a set of 5 boards. All functions, including the battery level monitor, operate flawlessly. During testing, the charging/switching IC exhibited slight warmth, which was within acceptable limits. Additionally, a 3.3k resistor was mistakenly placed where a 330-ohm resistor was intended. Despite this, the module performed without any issues.</p> <p></p> <p> </p>"},{"location":"avionics/archive/old/PCB-Modules/power/0.0.2/#002-components","title":"0.0.2 Components","text":"<ul> <li> <p>18650 charger datasheet</p> </li> <li> <p>Battery protection circuit</p> </li> <li> <p>Protection IC FET</p> </li> <li> <p>Charing and switching IC: BQ2407</p> </li> <li> <p>\"Fuel guage\"</p> </li> <li> <p>TPS63001</p> </li> <li> <p>PCIe Specs PDF (page 92 and 136)</p> </li> <li> <p>USBC</p> </li> </ul>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/","title":"0.1.0","text":"<p>First revision of the sensors module. GitHub</p> <p>3D Render</p> <p></p> <p>Schematic</p> <p>Footprint</p>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/#main-chips","title":"Main chips","text":"<ul> <li> <p>MCU</p> <ul> <li> <p>MCU RP 2040</p> </li> <li> <p>Flash W25Q128JVP</p> </li> </ul> </li> <li> <p>USB-C JLC USB-C port</p> </li> <li> <p>Momentary Button TS-1187A-B-A-B</p> </li> <li> <p>Sensors</p> <ul> <li> <p>IMU BNO055</p> <ul> <li>IMU Crystal ABS07-32.768KHZ-T</li> </ul> </li> <li> <p>Altimeter BMP388</p> </li> </ul> </li> <li> <p>CAN Controller and transceiver</p> <ul> <li>CAN chip crystal X322516MLB4SI</li> </ul> </li> </ul>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/#assembly","title":"Assembly","text":"<p>Standard assembly will be used over economic assembly. The primary reason is that the BNO055 and BMP388 aren't available with economic assembly. The number of extended parts on the board is exactly half of all unique components on the board, therefore the loading fee is equal either way. </p>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/#point-of-load-vs-bus-regulation","title":"Point of Load vs Bus Regulation","text":"<p>Point of load regulation is where your power bus is lets say 7.4 volts, and all your chips are 5v so you regulate the voltage near each chip. Bus regulation would be having the bus 5v. </p> <p>Point of load means having regulators on each module, but inherently less stability.  If you can get away without having to do point of load regulation you could save a lot of money though. </p> <p>To reduce costs, both the 5v and the 3.3v regulators will be deleted from the modules, in favour of regulated bus power. Before the full power module is ready however, we will need a very power module that supplies 5v and 3.3v.</p> <p>$375 can be saved buy not doing point of load. Delete the two regs and mux, that gets rid of 5 extended JLCPCB parts. It costs $3 per extended part (actually it's about 2.21). The minimum order number is 5. There will be 5 modules. 5 * 3 * 5 * 5 = 375.</p>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/#impedance-matching","title":"Impedance matching","text":"<p>This guide was used to do the impedance matching. The KiCad calculator and the JLCPCB design rules were used. </p>"},{"location":"avionics/archive/old/PCB-Modules/sensors/0.1.0/#bom","title":"BOM","text":"<p>Current KiCad bom</p> Reference info Value Footprint LCSC Part # JLC Link Digikey Link basic? price Current Draw Qty DNP Y2 CAN Clock X322516MLB4SI X322516MLB4SI:OSC_X322516MLB4SI C12668 https://jlcpcb.com/partdetail/Yxc_CrystalOscillators-X322516MOB4SI/C12668 nan no C$0.0829 200 uW 3.3v 1 nan Y1 BNO055 Crystal ABS07-32.768KHZ-T ABS07-32.768KHZ-T:XTAL_ABS07-32.768KHZ-T C130253 https://jlcpcb.com/partdetail/AbraconLlc-ABS07_32_768KHZT/C130253 nan no C$0.6839 0.5 uW 3.3v 1 nan X1 MCU Crystal ABM8-272-T3 ABM8-272-T3:ABM8-272-T3_ABR C20625731 https://jlcpcb.com/partdetail/AbraconLlc-ABM8_272T3/C20625731 nan no C$0.6692 200 uW 3.3v 1 nan U9 CAN Controller/Tranceiver MCP25625T-E/ML MCP25625T_E_ML:QFN28_6X6MC_MCH C191253 https://jlcpcb.com/partdetail/MicrochipTech-MCP25625T_EML/C191253 nan no C$2.9424 Con=10mA, Tra=70mA 1 nan U8 BNO055 BNO055 Package_LGA:LGA-28_5.2x3.8mm_P0.5mm C93216 https://jlcpcb.com/partdetail/BoschSensortec-BNO055/C93216 nan no C$14.0435 12.3mA 1 nan U5 BMP388 BMP388 BMP388:PQFN50P200X200X80-10N C779278 https://jlcpcb.com/partdetail/BoschSensortec-BMP388/C779278 nan no C$2.3423 800uA 1 nan U4 Flash W25Q128JVP Package_SON:WSON-8-1EP_6x5mm_P1.27mm_EP3.4x4.3mm C190862 https://jlcpcb.com/partdetail/WinbondElec-W25Q128JVPIQ/C190862 nan no C$1.0737 25mA 1 nan U2 MCU RP2040 Package_DFN_QFN:QFN-56-1EP_7x7mm_P0.4mm_EP3.2x3.2mm C2040 https://jlcpcb.com/partdetail/RaspberryPi-RP2040/C2040 nan no C$1.4190 20mA 1 nan S1,S2 Button TS-1187A-B-A-B TS-1187A-B-A-B:SW_TS-1187A-B-A-B C318884 https://jlcpcb.com/partdetail/XKBConnection-TS_1187A_B_AB/C318884 nan yes C$0.0242 nan 2 nan R83,R87,R91 10k ohm 10k Resistor_SMD:R_0402_1005Metric C25744 https://jlcpcb.com/partdetail/26487-0402WGF1002TCE/C25744 nan yes C$0.0007 nan 3 nan R220,R221,R222,R223 4.7k ohm 4.7k Resistor_SMD:R_0402_1005Metric C25900 https://jlcpcb.com/partdetail/26643-0402WGF4701TCE/C25900 nan yes C$0.0007 nan 4 nan R203,R204 27 ohm 27 Resistor_SMD:R_0402_1005Metric C25100 https://jlcpcb.com/partdetail/25843-0402WGF270JTCE/C25100 nan no C$0.0007 nan 2 nan R12,R30 1k ohm 1k Resistor_SMD:R_0402_1005Metric C11702 https://jlcpcb.com/partdetail/12256-0402WGF1001TCE/C11702 nan yes C$0.0007 nan 2 nan R89 150 ohm 150 Resistor_SMD:R_0603_1608Metric C22808 https://jlcpcb.com/partdetail/23535-0603WAF1500T5E/C22808 nan yes C$0.0013 nan 1 nan J6 USB-C USB_C_Receptacle_USB2.0_16P Connector_USB:USB_C_Receptacle_Palconn_UTC16-G C2765186 https://jlcpcb.com/partdetail/ShouHan-TYPE_C_16PIN_2MD_073/C2765186 nan no C$0.0738 nan 1 nan J4 two headders Conn_01x02 Connector_PinHeader_2.54mm:PinHeader_1x02_P2.54mm_Vertical nan nan nan nan nan nan 1 DNP J1 PCIe fingers Bus_PCI_Express_x1 Connector_PCBEdge:BUS_PCIexpress_x1 nan nan nan nan nan nan 1 DNP D88 Red LED LED LED_SMD:LED_0603_1608Metric C2286 https://jlcpcb.com/partdetail/Hubei_KentoElec-KT0603R/C2286 nan yes C$0.0075 nan 1 nan C85,C86,C94,C95 22pF Cap 22p Capacitor_SMD:C_0402_1005Metric C1555 https://jlcpcb.com/partdetail/1907-0402CG220J500NT/C1555 nan yes C$0.0077 nan 4 nan C84,C208,C210 1uF Cap 1u Capacitor_SMD:C_0402_1005Metric C52923 https://jlcpcb.com/partdetail/53938-CL05A105KA5NQNC/C52923 nan yes C$0.0041 nan 3 nan C40,C50,C51,C81,C82,C90,C92,C93,C206,C207,C209,C211,C212,C213,C214,C215,C216 100nF Cap 100n Capacitor_SMD:C_0402_1005Metric C307331 https://jlcpcb.com/partdetail/291005-CL05B104KB54PNC/C307331 nan yes C$0.0077 nan 17 nan C10,C11 15pF Cap 15p Capacitor_SMD:C_0402_1005Metric C1548 https://jlcpcb.com/partdetail/1900-0402CG150J500NT/C1548 nan yes C$0.0013 nan 2 nan"},{"location":"avionics/resources/","title":"Learn","text":"<p>Here are some resources to help learn things.</p>"},{"location":"avionics/resources/#git","title":"Git","text":"<ul> <li>Learn Git Branching</li> </ul>"},{"location":"avionics/resources/#youtube-videos","title":"Youtube videos","text":"<ul> <li> <p>Altium Designer Quick-Start Tutorial with Phil Salmony from Phil's Lab</p> </li> <li> <p>Raspberry Pi RP2040 Hardware Design | Altium Designer | JLCPCB - Phil's Lab #28</p> </li> <li> <p>How To Keep Components Connected When Moving | Altium Designer</p> </li> <li> <p>Microcontroller-Based Hardware Design With Altium Designer - #3 USB C</p> </li> <li> <p>ECAD-MCAD CoDesign with Altium 365 &amp; SOLIDWORKS</p> </li> <li> <p>Types of PCB Grounding Explained | PCB Layout</p> </li> <li> <p>Impedance Explained.</p> </li> </ul>"},{"location":"avionics/resources/#differential-pairs","title":"Differential Pairs","text":"<ul> <li>KiCad</li> <li>KiCad Controlled Impedance Traces (e.g. 50\u03a9) - Phil's Lab #3</li> <li>What Are Differential Pairs? </li> <li>When Does a Trace Act Like a Transmission Line?</li> </ul>"},{"location":"avionics/resources/dfmguide/","title":"DFM Guide","text":"<p>Design for manufacturing guide.  \"Forked\" from QRET's component repository.</p>"},{"location":"avionics/resources/dfmguide/#lcsc-part-numbers","title":"LCSC Part Numbers","text":"<p>JLCPCB is owned by LCSC, which is a large component distributor. An LCSC Part Number is a unique identifier for a given component. They will start with a \u201cC\u201d follow by several digits (e.g. C6186, C51230, etc.). We add these part numbers to our KiCAD schematics for parts we want assembled, and then can automatically generate a BOM (bill of material) that JLCPCB can accept. You can find these numbers on the JLCPCB page.</p> <p></p>"},{"location":"avionics/resources/dfmguide/#jlcpcb-basic-vs-extended-parts","title":"JLCPCB Basic vs. Extended Parts","text":"<p>When searching for components through JLCPCB, they are labelled either \u201cBasic\u201d or \u201cExtended\u201d. Basic components are ones that are used very frequently, and are thus loaded into the pick-and-place machines already. Extended components are less commonly used, and thus require additional effort to load them into machines. This extra effort translates to an additional fixed cost of ~$4.31CAD (\u201dFeeders Loading fee\u201d) for every unique Extended part per batch. For standard assembly, all components have a flat Feeders Loading fee of 2.16. There are cases where using standard assembly can actually be cheaper than economic assembly such as if all your components are extended rather than basic.</p> <p>See this page for more pricing details. We want to use Basic parts wherever possible.</p> <p>This website automatically calculates the equivalent parallel or series resistor combinator to your desired resistance using only JLC basic parts.</p> <p></p>"},{"location":"avionics/resources/dfmguide/#jlcpcb-economic-vs-standard-pcb-assembly","title":"JLCPCB Economic vs. Standard PCB Assembly","text":"<p>When asking JLCPCB to solder components for us, they have two tiers; Economic and Standard. Economic comes with many benefits, largely the reduced price &amp; option for Basic parts being free. Standard PCBA gives more options, but is more expensive (~$25 extra) and requires a loading fee for ALL components, thus resulting in a much higher price. More advanced features, such as very small components or gold-plated edge connectors, require Standard PCBA. See this page for more info about JLCPCB\u2019s Manufacturing and Assembly Capabilities. We want to use the Economic option whenever possible. If \u201cEconomic\u201d is selected, any \u201cStandard Only\u201d components will be highlighted after uploading the BOM during the order process. You can also use JLCPCB\u2019s \u201cBOM Tool\u201d to evaluate current part selection.</p> <p></p> <p></p>"},{"location":"avionics/resources/dfmguide/#passive-smd-component-sizes","title":"Passive SMD Component Sizes","text":"<p>Note: SMD is a form of SMT.</p> <p>We very commonly use the Imperial naming scheme when referring to passive SMD sizes.</p> <p>We will be trying to avoid 0402 components where possible, to make assembly &amp; repairs easier. 0603 and 0804 are our go-to sizes. Ideally we want to select components that JLCPCB stocks and avoid extended parts where possible.</p> <p></p>"},{"location":"avionics/resources/dfmguide/#jlc-basic-components","title":"JLC Basic Components","text":"<p>I don't believe there are any basic inductors.</p>"},{"location":"avionics/resources/dfmguide/#basic-smd-components-wip","title":"Basic SMD Components (WIP)","text":"Value Type Footprint LCSC # Red LED LED 0603 C2286 Red LED LED 0805 C84256 White LED LED 0603 C2290 White LED LED 0805 C34499 Yellow LED LED 0603 C72038 Yellow LED LED 0805 C2296 Green LED LED 0805 C2297 2N7002 N-MOSFET SOT-23 C8545 AO3400A N-MOSFET SOT-23-3L C20917 AO3401A P-MOSFET SOT-23 C15127 SI2301CDS P-MOSFET SOT-23 C10487 1N5819WS Schottky Diode SOD-323 C191023 SS14 Schottky Diode DO-214AC C2480 1k Resistor 0805 C17513 10pF MLC Capacitor 0603 C1634 10pF MLC Capacitor 0402 C32949 30pF MLC Capacitor 0603 C1658 2.2nF Capacitor 0603 C1604 10nF MLC Capacitor 0603 C57112 10nF MLC Capacitor 0402 C15195 100nF MLC Capacitor 0603 C14663 100nF MLC Capacitor 0402 C1525 1uF MLC Capacitor 0805 C28323 1uF MLC Capacitor 0603 C15849 1uF MLC Capacitor 0402 C52923 4.7uF MLC Capacitor 0805 C1779 10uF MLC Capacitor 0603 C96446 10uF MLC Capacitor 0402 C15525 22uF MLC Capacitor 0805 C45783 100Ohm Ferrite Bead 0805 C1015 600Ohm Ferrite Bead 0805 C1017"},{"location":"avionics/resources/dfmguide/#0603-resistors","title":"0603 Resistors","text":"<p>Most of these come in 0402 basic as well.</p> Value LCSC Part Number 0R C21189 10R C22859 20R C22950 33R C23140 51R C23197 100R C22775 120R C22787 150R C22808 200R C8218 220R C22962 270R C22966 300R C23025 330R C23138 390R C23151 470R C23179 510R C23193 560R C23204 680R C23228 820R C23253 1k C21190 1.2k C22765 1.5k C22843 1.8k C4177 2k C22975 2.2k C4190 2.4k C22940 2.7k C13167 3.3k C22978 3.6k C22980 3.9k C23018 4.7k C23162 5.1k C23186 5.6k C23189 6.2k C4260 6.8k C23212 7.5k C23234 8.2k C25981 9.1k C23260 10k C25804 12k C22790 13k C22797 15k C22809 18k C25810 20k C4184 22k C31850 24k C23352 27k C22967 30k C22984 33k C4216 39k C23153 47k C25819 51k C23196 56k C23206 68k C23231 75k C23242 82k C23254 100k C25803 120k C25808 150k C22807 200k C25811 220k C22961 300k C23024 330k C23137 470k C23178 510k C23192"},{"location":"avionics/resources/dfmguide/#formatting-your-bom","title":"Formatting your BOM","text":"<p>The following is a good BOM:</p> <p></p> <p>The most important thing in your BOM is the LCSC part number:</p> <p></p> <p>When you upload your BOM to JLCPCB it looks for the LCSC part number and matches the component automatically.</p> <p>You do not need silk screen chip designators for JLCPCB assembly. You do however need to put dots on pin one of ICs, and note anything that is polarized including LEDs. Try the JLCPCB assembly demo.</p>"},{"location":"avionics/resources/standards/","title":"Standards","text":""},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/12/01/two-weeks-update/","title":"Two Weeks Update","text":"<p>It's been two weeks since I started the 4\" Avionics. I just ordered it for assembly with JLCPCB I used USP express saver shipping. Hopefully I don't have to pay any more fees when it arrives. It cost $80.75. I got 5 boards. They don't have USB-C connectors in stock so I'm getting them off digikey.</p>"},{"location":"blog/2024/12/02/december-2/","title":"December 2","text":"<p>Gonna start work on the avionics bay . I think I'm stuck to using Altium and Solidworks now.</p>"},{"location":"blog/2024/12/09/december-9th/","title":"December 9th","text":"<p>Things I bought today:</p> <ul> <li>Test PCBs from JLC, module and backplate for the 4\" Avionics</li> <li>12 18650s</li> <li>spot welder and threaded heat inserts</li> <li>PCIe and UCB-C receptacles</li> </ul> <p>Should I use 0603, 0402 or 0201? If I go with 0603 we can solder it pretty easily. 0201 its not happening, and 0402 it's harder. Those components aren't even the expensive ones to have JLCPCB assemble for you. Actually 0201 is more expensive I think. Okay 0402 it is then. </p> <p>For the next board, we'll have a way to upload new code over the air. The CAN network will have its bootselect pins on the PCIe bus, the raspberry pi 5 or something will be able to put any of them into mass storage mode, and upload new code on the USB lines... maybe I should just do this now. okay fine i'll do it now</p>"},{"location":"blog/2024/12/12/chip-selection/","title":"Chip Selection","text":"<p>Here is the post outlining the reasons for picking the chips. This post will be updated in the future with reasons why or why not to pick these chips. Requirement for all chips was being available on JLC. </p>"},{"location":"blog/2024/12/12/chip-selection/#mcu","title":"MCU","text":"<p>RP 2040</p> <p>I went with the RP2040 because the alternatives are usually more complex or more expensive. The documentation on the rp2040 is great and there's a great online community around it. It's more than fast enough to accomplish what we need to do. </p> <p>ESP chips get kind of expensive, although they have some kind of CAN and ethernet capability on board. When we do go ethernet it'll probably be an addition to the CAN bus though.</p>"},{"location":"blog/2024/12/12/chip-selection/#flash","title":"Flash","text":"<p>W25Q128JVP Didn't even read the data sheet. It's the one they use in the rp2040 hardware design guide, it's the most flash the rp2040 can use.</p>"},{"location":"blog/2024/12/12/chip-selection/#crystal","title":"Crystal","text":"<p>ABM8-272-T3 In the rp2040 design guide. </p>"},{"location":"blog/2024/12/12/chip-selection/#usb-c","title":"USB-C","text":"<p>USB-C port Easy choice; pretty much only one on JLCPCB at the time</p>"},{"location":"blog/2024/12/12/chip-selection/#power","title":"Power","text":""},{"location":"blog/2024/12/12/chip-selection/#33v-regulator","title":"3.3v Regulator","text":"<p>LMR51430YFDDCR Constant, 1kHz switching reg, wide voltage input range, goes to 3.3v, cheap</p>"},{"location":"blog/2024/12/12/chip-selection/#5v-buck-boost","title":"5v buck-boost","text":"<p>TPS630701</p>"},{"location":"blog/2024/12/12/chip-selection/#power-mux","title":"Power MUX","text":"<p>TPS2121RUXR Two inputs, one output cheap, on JLC. done. Using this in Highest Voltage Operation (VCOMP) mode with the battery as the main and USB as secondary  </p>"},{"location":"blog/2024/12/12/chip-selection/#sensors","title":"Sensors","text":""},{"location":"blog/2024/12/12/chip-selection/#imu","title":"IMU","text":"<p>Need IMU with accelerometer, gyroscope and magnetometer, high sample rate, some vibration resistance, onboard sensor fusion and on JLC.</p> <p>BNO055, BNO055, BMX055, MPU-9250 are off the table because they need standard assembly. The options are: - MPU-6050 (only 6-axis) - ICM-20948 (9-axis with fusion)</p> <p>So there's only the ICM-20948 if I wan't to do 9 axis.</p>"},{"location":"blog/2024/12/12/chip-selection/#pressure","title":"Pressure","text":"<p>Need temperature and pressure and high sample rate.</p> <p>Some JLC options for pressure sensors: - MS563702BA03-50 - GZP6816D - GZP131-701A - MS560702BA03-50 - HP203B - WF100SPZ 0.4BG S6 AT - MPXHZ6115AC6T1 - GZP170-701A - LWLP5001DD - MPS-3117-006GC-A3 - NSPAS1N115RR01</p> <p>MS560702BA03-50 was chosen for high speed capabilities.</p>"},{"location":"blog/2024/12/12/chip-selection/#payload-module","title":"Payload Module","text":"<p>We might add a payload module with a bunch of different sensors and the \"experiment\" will be to see the discrepancies in their readings.</p>"},{"location":"blog/2024/12/12/chip-selection/#0201-0402-or-0603","title":"0201, 0402 or 0603?","text":"<p>Should I use 0603, 0402 or 0201? If I go with 0603 we can solder it pretty easily. 0201 its not happening, and 0402 is harder. Those components aren't even the expensive ones to have JLCPCB assemble for you. Actually 0201 is more expensive I think. Okay 0402 it is then. </p> <p>Okay there's not that many JLC basic resistors so I'll use 0603 and hand solder those ones.</p>"},{"location":"blog/2024/12/12/chip-selection/#conclusion","title":"Conclusion","text":"<p>It's not a good idea to spend too long on chip selection, better to just start making shit and find out along the way. I'll probably regret some of these choices, but that is part of learning. Some chips I really didn't think that much about, if it does the job and is cheap enough I'll use it I don't need to compare it with every single alternative out there. Some chips like the sensors I compared a bunch of chips in the same range, and took inspiration from other teams and such. ChatGPT is great for suggesting chips, it currently gets the numbers wrong very often so you can't trust anything and have to read the data sheet yourself to confirm but it still makes it much much easier. Vibration wasn't too much a concern, most chips can withstand the vibration we'd put them through.</p>"},{"location":"blog/2024/12/01/dingboard-is-nextboard/","title":"dingboard is Nextboard","text":"<p>Well I named the dingboard the dingboard because I thought I was gonna make a bigger board later on and I was gonna name it the dongboard or some shit. There's no value in making a single board flight computer right now, so the MCU will be CAN enabled from the get go. It doesn't add much complexity. The MCU board will be ran at 3 volts so I will be able to use the V1 power board for it. Later on I'll need to use an antenna which will be ran at 5v with 3.3v logic. So while power v1 is shipping, I'll work on the MCU with CAN, while that is being shipped I'll upgrade the power to 3s with 3.3v 5v and unregulated 12v. Then I'll work on the antenna module while that is shipping then I'll work on the GPS while that is shipping then blah blah. The specifics will change but this is the idea.</p>"},{"location":"blog/2024/12/23/rebranding/","title":"Rebranding","text":"<p>The site has officially been changed to Sonic Avionics. I choose this name because sonicavionics.com was available and it kinda rhymes. I changed dingboard's name to 4\" Avionics. This is kind of sad, but we're gonna have to present to some committees and it wouldn't look good to have it called that. We lack credibility so a silly name would be seen as a negative thing. I promise to make the 6 inch avionics called dongboard. </p>"},{"location":"blog/2024/12/20/one-month-of-pcbs/","title":"One Month of PCBs","text":"<p>The power module 0.0.2 works perfectly.</p> <p>Here's some photos of me testing it. I got heat shrink that's too big.</p> <p> </p> <p></p> <p>I even got the fuel gauge chip working.</p> <p></p> <p>A month into this project, and I got a working PCB! I'm happy about that. Not often it works on the first try either. It took 15 days for the PCBs to arrive and it cost $116.28 CAD for assembly for 5 boards including shipping and tax and everything.</p>"},{"location":"blog/2024/12/28/december-28/","title":"December 28","text":"<p>Here are two images of the final prices for PCBs</p> <p>The more expensive one uses standard assembly, the less expensive one uses economic. I thought standard assembly would cost a lot more.</p> <p> At first I designed the PCB with a sensors that were only available with standard assembly. It cost $205 I was like that's a little much.</p> <p> Then I redesigned it with all economic components. It turned out the feeders loading fee is the exact same for both because the standard fee is half of the economic fee and I had double the components.</p> <p>So in the end it costs about $50 more to use much better sensors. That's only $10 a board. I think it's well worth it.</p>"},{"location":"blog/2024/12/07/avionics-bay-cad/","title":"Avionics Bay CAD","text":"<p>Wow, the CAD for the avionics bay took a little longer than I expected. I had to make everything easily modifiable, so I used variables for almost every dimension. With the change of a couple numbers in a text file I can go from this:</p> <p></p> <p>to this</p> <p></p> <p>This is a fun avionics layout. I think it's kinda fun how they all slot into a PCIe CAN bus. 3D printing this is gonna be weird. I could also go with this design, but I think the first one is more fun.</p> <p></p> <p>The thing about this avionics system, is that once the board dimensions are made, there's no going back. </p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/","title":"KiCAD vs Altium and Solidworks vs OnShape","text":"<p>Gotta pick which software to use. Most teams use KiCAD and Solidworks.</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#kicad-vs-altium","title":"KiCad vs Altium","text":"<p>5 minutes into KiCAD. Here's the pros and cons of KiCAD. One downside already is no dark mode support on windows</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros","title":"Pros","text":"<ul> <li>There seems to be a much better built in library. Well it has PCIe footprints.</li> <li>I don't have to sign in and click roam on the licenses all the time. </li> <li>There's a plentiful plugs ins repo. </li> <li>It's way way faster</li> <li>Dark mode for schematic editor.</li> <li>FOSS</li> <li>Altium's manufacturer part search is really not that fast, and for whatever reason the BOM is the slowest thing in the world. There's few companies that would use the build in supply chain shit, it just slow things down and I didn't see a way to disable it without disabling the manufacturer part search.</li> <li>Many different repos for all the manufactures design rules. </li> <li>Exporting is way faster with the JLCPCB plug in</li> <li>The measurement tool is slightly better</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons","title":"Cons","text":"<ul> <li>The UI is somewhat less professional looking. (who cares)</li> <li>KiCAD doesn't have dark mode on windows. Altium's UI is dark by default, but I don't think you can add themes for the actual schematic editor. So that's </li> <li>Altium actually has better git integration surprisingly.</li> <li>You can only have one project open per instance. <code>open -n /Applications/KiCad/kicad.app</code></li> <li>I've experienced more crashes than Altium. Running tally of crashes: 10</li> <li>Sometimes the footprints don't show up in the previewer windows when selecting a chip</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#routing","title":"Routing","text":"<p>Altium has much better routing. Dragging chips that already have traces around in Altium works much better than in KiCad. </p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#design-rules","title":"Design Rules","text":"<p>The design rules manger is much better in Altium.</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#solidworks-vs-onshape","title":"Solidworks vs OnShape","text":"<p>I'll do pros and cons of Solidworks</p>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#pros_1","title":"Pros","text":"<ul> <li>Faster </li> <li>Realview graphics</li> <li>Can handle assembly as large as your computer will allow. OnShape is run in AWS. I didn't think this would be an issue, because they dynamically allocate compute based on your needs. Even still, it is really slow loading things, and I did notice that after a while it gets faster the more you use it, but still its much slower than Solidworks.</li> </ul>"},{"location":"blog/2024/12/08/kicad-vs-altium-and-solidworks-vs-onshape/#cons_1","title":"Cons","text":"<ul> <li>Very old looking interface </li> <li>Have to update variable file reference manually every time you add a variable. </li> <li>No version control, although OnShape has it but doesn't use git.</li> <li>Mating in OnShape is faster, the same thing that takes one mate in OnShape takes 2 or 3 in Solidworks.</li> <li>Only runs on windows, OnShape is really great for how it runs in the browser. I would do almost anything to never have to use windows again, but onshape is just too slow.</li> <li>Very expensive for companies, onshape has a free tier for open source people.</li> <li>The workflow with Solidworks involves using sharepoint or something similar. The files will get too large for regular git so LFS will be needed.</li> </ul>"},{"location":"blog/2024/12/04/solidworks-is-fucked/","title":"Solidworks is fucked","text":"<p>Why is Solidworks so fucked. It keeps flickering between these views:</p> <p></p> <p></p> <p>I've had so many glitches. I've ran the import diagnostics on the PCIe step it says its fine. I did... do the workaround to get my 3070ti working. Although this happens with realview on or off. </p>"},{"location":"blog/2024/11/15/init/","title":"Init","text":"<p>I'm starting a new website. Getting tired of my php site.</p> <p>I noticed my school is behind compared to other schools. I plan on getting us up to speed, while at the same time learning as much as possible. The end goal is making a rocket that can compete with waterloo's borealis. If all goes right, we'd launch it at LC 2026. This year (LC 2025), the goal is to make a mojave spinx esque rocket. I'm going to start off with recovery, and avionics. The reason being, is that it is possible to launch the same avionics in a 4 inch diameter kit rocket, that we could use in a mojave sphinx. The recovery system will be almost the exact same. </p> <p>The first thing I'm gonna do is make a very simple board in Altium. It will have the rp 2040, a usbc port, flash, a LED, reset button, pin out, USB over current protection, a barometer and an accelerometer. It'll be a bit better than a pico.</p>"},{"location":"blog/2024/11/16/nov-16th/","title":"Nov 16th","text":"<p>Agenda for today:</p> <ul> <li> Altium with GitHub</li> <li> Altium with Solidworks</li> <li> Begin 4\" Avionics</li> </ul>"},{"location":"blog/2024/11/17/nov-17th/","title":"Nov 17th","text":"<p>Learnt about mosfets</p>"},{"location":"blog/2024/11/18/nov-18th/","title":"Nov 18th","text":"<p>Learnt that I shouldn't just use a mosfet since there's power switching/charging ICs</p>"},{"location":"blog/2024/11/19/nov-19th/","title":"Nov 19th","text":"<p>Considering ordering the power board on its own for now. The only issue is the wait time. Could continue with 6502 stuff until then or work on the CPU board. </p> <p>Here's the current check list of things to implement:</p> <ol> <li> Battery protection IC</li> <li> Charging IC</li> <li> Buck-boost</li> </ol>"},{"location":"blog/2024/11/26/nov-26th/","title":"Nov 26th","text":"<p>Agenda:</p> <ul> <li> solid works and altium<ul> <li> set board dimensions Gonna set the board dimensions after I get the first iteration of the power board ordered</li> </ul> </li> <li> get proper PCIe dimensions</li> <li> add power switch for battery forget it i'll just unplug it for this version</li> <li> finish routing</li> <li> add test points</li> <li> add all LCSC designators</li> </ul> <p>This is not going to be a CAN enabled board. The gold fingers are for practice, and modularity. The only reason it's not the next board already is because I choose 1S for the battery for simplicity. Might have been better to just make the full board from the get go. but since I'll have to go to 3S I should just to the CAN stuff when I do that.</p> <p>if time:</p> <ul> <li>add table of contents to menu if it doesn't work make open an issue</li> <li>make tables have divisions </li> </ul>"},{"location":"blog/2024/11/29/annoyed-at-altium-still/","title":"Annoyed at Altium Still","text":"<p>So to use ECAD/MCAD you have to use Altium 365. It makes it's own .git file in the main Altium directory. So you could still have a .git in the directory above it which you could push to github as a primary thing. Then you could just push to the Altium 365 whenever you want to use MCAD. The ECAD/MCAD integration just doesn't seem worth the hassle though. Being able to move around components in MCAD does seem really cool though. I just wish they did it right. Engineering tools are never designed by good software engineers. The software engineers that make it never really use it. The best stuff is made by the people that use the thing. git is so good because the people that maintain it are the people that use it. I love that shit that's like \"made by blank for blank.\" Usually it's shampoo or something, but when it's actually true the product is good.</p> <p>When I pushed my project to Altium 365 it copied my project to a new location on my computer. So I've been making all these changes to a separate repo this whole time. So to continue using the old repo, I'd have to delete the old files and add the new files, reinitializing the repo basically. Because the Altium files are all binaries. I hate Altium.</p> <p>At some point I switched the buck boost to a linear regulator/boost. Idk how that happened now I gotta switch it back.</p>"},{"location":"blog/2024/11/25/altium-complaints/","title":"Altium Complaints","text":"<p>.lia files are fully broken in Altium. You literally just can't import them anymore.</p> <p>There's this nice PCIe template I want to use, but circuit maker is effed. Why are they even trying to keep circuit maker alive? It's fully broken because it wants you to sign in with a name and password but you can only use google to sign up in the browser and there's no option to change your password anywhere. </p> <p>There used to be a template libary?. Now all the \"design content\" links redirect to octopart which doesn't seem to have templates like the design content. https://designcontent.live.altium.com/#Search/pcie</p> <p>The license manager has to be one of the most annoying things known to man. Every now and then you start up Altium and you have to click \"release\" then roam on three licenses because it thinks you're signed in somewhere else.</p> <p>Altium, Solidworks and Onshape have different methods of rotation. </p> <p>Onshape is clearly the best, pan zoom and rotate are all done without a modifier. It's just constrained rotate which uses shift. I don't think solidworks even has that though.</p> <p>Altium is the worst is uses track ball rotation which inherently requires more clicks.</p> <p>Matt Keeter // 3D Rotation Design</p> <p>Everying time I paste a JLCPCB part number into the BOM the entire software freezes for a good 20 seconds. </p>"},{"location":"blog/2024/11/26/ecadmcad-ideal-version-control-workflow/","title":"ECAD/MCAD Ideal Version Control Workflow","text":"<p>Here's some ideas for how Solidworks and Altium or any MCAD and ECAD would ideally work together. </p> <p>Altium codesigner is for use with Altium 365 only.  Solidworks doesn't have branching and merging. It's proprietary version control method is rubbish.</p> <p>Ideally, you'd have a MCAD and a ECAD repo. Both of them use each other as submodules. Or you could just have the one repo with RBAC but I don't think github lets you do that because it would be annoying if you commit to a file you don't have perms for then try to push it it would say nope bruh you can't change that one file in all your files you changed. Actually that doesn't sound so bad </p> <p>MCAD pulls to the ECAD submodule. Changes are made to the PCB, a pull request is made, the electrical engineer accepts them. Then the rest of the MCAD team pulls from the ECAD repo and has access to the new changes. There should be some features like board shape, and max component height that the MCAD engineer has control of that a pull request is required to make. That would be what the submodule </p> <p>Maybe there would just be a third repo for things that both teams depend on. This would only be the board dimensions. Both the ECAD and MCAD softwares should be able to edit it, but there should be accept/deny system where an engineer from both teams need to approve the change.  The ECAD team doesn't want to see the rest of the structure they only care about the PCB.</p> <p>Sometimes you'd want the MCAD team designing an enclosure as a secondary to the PCB layout, sometimes there's board constraints sizes like in a rocket which makes the MCAD designers primary.  Three sort of use cases: Primary MCAD, primary ECAD, and equal priority</p> <p>There would need to be a system for breaking changes. There needs to be keep out regions, and expected layouts. </p> <p>I would like for right now, to be able to push a board layout, a rough layout, to the board dimensions/connectors repo. This contains the gold fingers, USB and JST connectors. This is an initial push so it doesn't require both team's approval. Next I want to go into solidworks, move around the gold fingers, change the board diameter, lets say shrink it. Then I push to the dimensions/connectors repo. A pop up on Altium appears, it says \"a change has been proposed\". Then it says would you like to branch to check approvability? I finish my changes to the ECAD before I then branch the ECAD repo. This special branch pulls changes proposals from the dimensions/connectors repo. Then I look around to see if I can rework the PCB a bit to allow the changes. I rework the pcb a bit then accept the changes. I merge back the ECAD branch to main. The new main has a different git hash has associated with the dimensions/connectors submodule. </p> <p>Anyways there's some spit balling about an ideal version control ECAD/MCAD workflow. I don't think this can be done with kicad or some open source cad software. The two softwares would need to agree on a system for the dimensions/connectors files. And it's probably best the two softwares are kept separate. </p> <p>So you can use workarounds to avoid using Altium 365, but you loose too much convenience for it to be worth it. You'd have to keep exporting to a STEP in altium then in solid works you'd have to export to a DXF then in Altium import that to be the board shape.</p>"},{"location":"blog/2024/11/20/nov-20th/","title":"Nov 20th","text":"<p>Current progress:</p> <p></p> <p>The hardest part was definitely the component selection. I read through so many data sheets. Maybe I can get the rest of the board done tomorrow?! Then I can go relax with some 6502 stuff for a bit.</p> <p>Tomorrow:    - MCU schematic   - PCB layout   - Verify design for PCBA</p>"},{"location":"blog/2024/11/21/nov-21th/","title":"Nov 21th","text":"<p>Added a battery \"fuel guage\" it gives you an accurate reading of the battery level over I2C</p> <p></p> <p>I started the PCB </p>"},{"location":"blog/2024/11/24/jlcpcb-and-altium-design-rules-issues/","title":"JLCPCB and Altium Design Rules Issues","text":"<p>JLCPCB \"PCB Manufacturing &amp; Assembly Capabilities\" is kinda confusing.</p> <p>So for a two layer PCB,</p> <p></p> <p>it says \"2-layer: 0.15mm hole size / 0.25mm via diameter.\" That would mean the pad width or \"annular ring\" can be 0.05mm right? </p> \\[ \\frac{0.25}{2} - \\frac{0.15}{2} = 0.05 \\] <p>but wait: </p> <p>Now it says: \"2-layer: 1 oz: Recommended 0.25 mm or above; absolute minimum 0.18 mm.\" </p> <p>I guess a via doesn't count as a PTH (Plated Through Hole)?</p> <p>By default in Altium you set your minimum annular ring:  and this applies to vias and PTH. So... I guess Altium probably shouldn't do this by default?</p>"},{"location":"blog/2025/04/16/april-16th-order/","title":"April 16th Order","text":"<p>Antenna modules ordered:</p> <p></p>"},{"location":"blog/2025/04/07/april-7th-order/","title":"April 7th Order","text":"<p>Another round of antenna module tests:</p> <p></p>"},{"location":"blog/2025/02/12/february-16-order/","title":"February 16 Order","text":"<p>Two orders were made today/</p> <p>This from Data AllianceTotal. Total $76.17 CAD. </p> <p>And this from Digikey. Total $20.83 CAD. </p> <p>Progress marches ahead. We'll be ordering the GPS module</p>"},{"location":"blog/2025/01/07/january-25-order/","title":"January 25 Order","text":"<p>Ordered prototype antenna modules today. No assembly, just the PCBs for sizing.</p>"},{"location":"blog/2025/01/07/automation/","title":"Automation","text":"<p>I've set up a GitHub actions shared workflow to automatically render schematics, footprint editor and 3D PCB images. All the pictures you see on the blog are automatically generated, and updated every time a commit is made.</p> <p>I used these resources:</p> <ul> <li>Rendering KiCAD PCB to PNG</li> <li>model-viewer</li> <li>Introduction to the KiCad Command-Line Interface</li> </ul>"},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/","title":"Sensors, PowerSim and Backplate Arrive","text":"<p>It only took 7 days for the boards to arrive this time!</p> <p></p>"},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/#lessons","title":"Lessons","text":""},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/#sensor-module","title":"Sensor Module","text":"<p>For a reason I still don't quite understand, the only cables that have been working for the data transmission are USB-C to USB-A. The USB-C to UCB-C cables don't. I though it had something to do with USB 2 vs 3 but I've tried a both 2 and 3 and they work.</p> <p>Test points, silk screen labels and an LED or two on the next version. Not necessary, the board works fine right now but it's important for troubleshooting.</p>"},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/#powersim","title":"PowerSim","text":"<p>Only some power supplies work. Macbook port doesn't unless there's I use an adapter thing, and my 40W Anker wall adapter doesn't either, Alienware ports do work. The reason for this is due to protection circuits present on some power supplies. </p> <p>The idea is they don't want a live wire lying around because it acts like an inductor and could potentially have high transient current. So if you have a very very small load, it will just shut off the power to the port to prevent that. </p>"},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/#backplate","title":"Backplate","text":"<p>I used 0805 resistors. I could have made them even bigger. Soldering all the PCIe pins is more annoying than it looks. I wish JLC assembled that.</p>"},{"location":"blog/2025/01/13/sensors-powersim-and-backplate-arrive/#next-steps","title":"Next Steps","text":"<p>I'll be testing out CAN bus soon. I have 4 sensor boards to test with. (I broke one during testing) If all goes well I'll start work on the power module.</p> <p>The CAD and 3D printing for the enclosure needs to be finalized as well.</p>"},{"location":"blog/2025/01/17/january-17-order/","title":"January 17 Order","text":"<p>Ordered PowerSim and Sensors 0.2.0. </p> <p></p>"},{"location":"blog/2025/01/03/january-3rd-order/","title":"January 3rd Order","text":"<p>3 PCBs have been ordered today. Total was C$278.84. </p> <p> </p>"},{"location":"blog/2025/06/10/june-6th-order/","title":"June 6th Order","text":"<p>Friday I ordered the GPS module using the ublox NEO-M9N through JLCPCB PCB Assembly. </p> <p>It\u2019s now completed assembly and heading from the workshop to the warehouse. Total cost was \\(118.10 USD (\\)161.61 CAD including shipping). Ran into an issue early on, the GPS module was already out of stock before ordering, so I had to place a pre-order. Unfortunately, the original pre-order supplier also ran out of stock right as the board design was finished. JLCPCB support found an alternative channel to source the modules. Took some emails back and forth, but everything is finally on track now. The module has passed final assembly inspection and is now moving from the workshop to the warehouse for shipping. Next up: testing u-center setting up the modules for integration into the avionics system. Making steady progress!</p>"},{"location":"blog/2025/05/11/winning-the-esch-awards/","title":"Winning The Esch Awards","text":"<p>I am proud to announce that we won the stage\u00a01 Norman Esch Engineering Innovation and Entrepreneurship Award!</p>"},{"location":"join/","title":"Join us","text":"<p>We are a student organization made up of TMU students.</p>"},{"location":"join/#open-positions","title":"Open Positions","text":"<ul> <li> <p>Computer hardware</p> <ul> <li>Use KiCad to develop PCBs</li> <li>Prior experience with git and KiCad</li> </ul> </li> <li> <p>CI/CD</p> <ul> <li>Develop workflows using GitHub actions to automate documentation</li> <li>Prior experience with CI/CD</li> </ul> </li> <li> <p>Graphic design</p> <ul> <li>Logo and some PCB art for this board. Here's the DXF file. </li> <li>Figure out JLCPCB's design requirements for minimum stroke thickness, distance from edge etc.</li> <li>Something like this or multicolor</li> </ul> </li> </ul>"},{"location":"join/#contribution-requirements","title":"Contribution Requirements","text":"<p>Sonic Avionics intends to scale and create increasingly complex projects. We use GitHub for everything.</p>"},{"location":"join/#general-requirements","title":"General Requirements","text":"<ol> <li>Experience with GitHub and Git</li> <li>Completed Learn Git Branching tutorial, and apply all concepts in a GitHub repo</li> <li>Read: How To Ask Questions The Smart Way</li> <li>Understand what cloning and forking and pull requests are on GitHub.</li> <li>Do the challenge of your specialization</li> </ol>"},{"location":"join/#guidelines","title":"Guidelines","text":"<p>Before doing the Learn Git Branching tutorial, it is recommended you do the following:</p> <ul> <li>If you're on windows, install WSL</li> <li>Install GitHub CLI then <code>gh auth login</code></li> <li>Use zsh and Oh My Zsh and powerlevel10k</li> <li>Get VSCode, and sign in with GitHub</li> </ul>"},{"location":"join/#upon-completion","title":"Upon Completion","text":"<p>If you have the requirements, and have completed the challenge contact 'zeulewan' on discord or email: zeul@mordasiewicz.com</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/4-avionics/","title":"4\" Avionics","text":""},{"location":"blog/category/purchases/","title":"Purchases","text":""},{"location":"blog/category/complaints/","title":"complaints","text":""},{"location":"blog/category/agenda/","title":"Agenda","text":""},{"location":"blog/category/info/","title":"Info","text":""},{"location":"blog/page/2/","title":"Latest Posts","text":""},{"location":"blog/page/3/","title":"Latest Posts","text":""},{"location":"blog/page/4/","title":"Latest Posts","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""},{"location":"blog/archive/2024/page/3/","title":"2024","text":""},{"location":"blog/category/4-avionics/page/2/","title":"4\" Avionics","text":""},{"location":"blog/category/4-avionics/page/3/","title":"4\" Avionics","text":""}]}